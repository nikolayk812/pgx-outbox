networks:
  default:
    external: true
    name: peerdb_network

services:
  postgres:
    image: postgres:17.5-alpine3.22
    command: [ "-c", "wal_level=logical" ]
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: dbname
    ports:
      - "5432:5432"
    volumes:
      - ../../internal/sql/01_outbox_messages.up.sql:/docker-entrypoint-initdb.d/01_outbox_messages.up.sql
      - ../../internal/sql/02_users.up.sql:/docker-entrypoint-initdb.d/02_users.up.sql
      - ../../internal/sql/03_orders.up.sql:/docker-entrypoint-initdb.d/03_orders.up.sql
    networks:
      - default

  kafka:
    image: confluentinc/cp-kafka:7.4.0
    hostname: kafka
    ports:
      - "9092:9092"
      - "9101:9101"
    environment:
      # KRaft mode configuration (no ZooKeeper needed!)
      KAFKA_NODE_ID: 1
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: 'CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT'
      KAFKA_ADVERTISED_LISTENERS: 'PLAINTEXT://kafka:29092'
      KAFKA_LISTENERS: 'PLAINTEXT://kafka:29092,CONTROLLER://kafka:29093'
      KAFKA_INTER_BROKER_LISTENER_NAME: 'PLAINTEXT'
      KAFKA_CONTROLLER_LISTENER_NAMES: 'CONTROLLER'
      KAFKA_CONTROLLER_QUORUM_VOTERS: '1@kafka:29093'
      KAFKA_PROCESS_ROLES: 'broker,controller'
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_JMX_PORT: 9101
      KAFKA_JMX_HOSTNAME: localhost
      KAFKA_LOG_DIRS: '/tmp/kraft-combined-logs'
      # Generate cluster ID automatically
      CLUSTER_ID: 'MkU3OEVBNTcwNTJENDM2Qk'
      KAFKA_LOG4J_LOGGERS: "org.apache.kafka.image.loader=WARN"

  redpanda-console:
    image: docker.redpanda.com/redpandadata/console:v3.2.0
    ports:
      - "8080:8080"             # UI accessible on host
    environment:
      KAFKA_BROKERS: kafka:29092  # your Kafka container hostname and port
